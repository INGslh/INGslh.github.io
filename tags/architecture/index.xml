<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architecture on Ingslh's Blog</title><link>https://ingslh.github.io/tags/architecture/</link><description>Recent content in Architecture on Ingslh's Blog</description><generator>Hugo -- gohugo.io</generator><managingEditor>ingslh@foxmail.com (ingslh)</managingEditor><webMaster>ingslh@foxmail.com (ingslh)</webMaster><lastBuildDate>Fri, 17 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ingslh.github.io/tags/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>MVC MVP MVVM架构浅析</title><link>https://ingslh.github.io/post/2022-06-18-mvc-mvp-mvvm%E6%9E%B6%E6%9E%84%E6%B5%85%E6%9E%90/</link><pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate><author>ingslh@foxmail.com (ingslh)</author><guid>https://ingslh.github.io/post/2022-06-18-mvc-mvp-mvvm%E6%9E%B6%E6%9E%84%E6%B5%85%E6%9E%90/</guid><description>&lt;p>&lt;strong>MVC&lt;/strong>、&lt;strong>MVP&lt;/strong>和&lt;strong>MVVM&lt;/strong>是三种用以实现软件系统中用户界面与逻辑层解耦的抽象架构模型，其中后两种算是&lt;strong>MVC&lt;/strong>的变形。作为三种最常用的三种架构设计模式，它们有着各自不同的的应用场景，结合自己之前的经验，来简单总结下它们的特点。&lt;/p></description></item></channel></rss>